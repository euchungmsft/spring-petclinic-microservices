# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CD, Build & deploy for Customers

on:
  workflow_dispatch:
#  push:
#    branches: [ gene ]
#  pull_request:
#    branches: [ gene ]

env:
  PROJECT_NAME: 'spem003'
  AZURE_RESOURCE_GROUP_NAME: 'spem003-rg'
  AZURE_SUBSCRIPTION_ID: '1ea8ac05-8fca-4c78-90d6-caa4bc8da388'
  AZURE_LOCATION: 'westus'  

  SPRING_CLOUD_SERVICE: spem003-springcloud  

  API_GATEWAY: api-gateway
  ADMIN_SERVER: admin-server
  CUSTOMERS_SERVICE: customers-service
  VETS_SERVICE: vets-service
  VISITS_SERVICE: visits-service
  CONSUMER_SERVICE: consumer-service

  API_GATEWAY_JAR: spring-petclinic-api-gateway/target/spring-petclinic-api-gateway-2.5.1.jar
  ADMIN_SERVER_JAR: spring-petclinic-admin-server/target/spring-petclinic-admin-server-2.5.1.jar
  CUSTOMERS_SERVICE_JAR: spring-petclinic-customers-service/target/spring-petclinic-customers-service-2.5.1.jar
  VETS_SERVICE_JAR: spring-petclinic-vets-service/target/spring-petclinic-vets-service-2.5.1.jar
  VISITS_SERVICE_JAR: spring-petclinic-visits-service/target/spring-petclinic-visits-service-2.5.1.jar  
  CONSUMER_SERVICE_JAR: spring-petclinic-consumer/target/spring-petclinic-consumer-2.5.1.jar  

  AZURE_CLIENT_ID: f8e4b788-889f-40b8-b4cd-1d03a1b21853
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CREDENTIALS02 }}
  AZURE_TENANT_ID: 32ba456e-9152-4737-9098-48431c5e6477
  KEYVAULT_URI: https://spem003-keyvault.vault.azure.net/

  AZURE_CRED: ${{ secrets.AZURE_CREDENTIALS01 }}

  AZURE_CONTAINER_NAME: 'blob01'

  CACHED_BUILD_PATHS: ${{ github.workspace }}/spring-petclinic-customers-service/target
  BUILD_CACHE_KEY: ${{ github.sha }}

jobs:

  init:
    name: Initialize Build Environment
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

      - name: Checkout GitHub Actions 
        uses: actions/checkout@v2
        with:
          ref: gene

      - name: Cache Local Maven Repository, cache m2
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'microsoft'
          cache: maven

  build:
    name: Build Customers
    runs-on: ubuntu-latest        
    needs: init
    timeout-minutes: 15
    steps:

      - name: Checkout GitHub Actions 
        uses: actions/checkout@v2
        with:
          ref: gene

      - name: Check Maven Cache, restore m2 cache
        uses: actions/cache@v2
        id: cache_m2_repo
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Cache Build Path, cache builds
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_BUILD_PATHS }}
          key: ${{ env.BUILD_CACHE_KEY }}

      # Log in to Azure
      - name: Login via Azure CLI
        uses: azure/login@v1.1
        with:
          creds: ${{ env.AZURE_CRED }} 

      - name: Create and Store redisson.json
        run: |
           jq --version

           KEY0=`az redis list-keys --name ${{ env.PROJECT_NAME }}-redis --resource-group ${{ env.AZURE_RESOURCE_GROUP_NAME }} | jq -r .primaryKey`
           echo "{\"singleServerConfig\":{\"address\": \"redis://${{ env.PROJECT_NAME }}-redis.redis.cache.windows.net:6379\", \"password\": \"$KEY0\"}}" > redisson.json
           cat redisson.json
           cp redisson.json spring-petclinic-${{ env.CUSTOMERS_SERVICE }}/src/main/resources/

        shell: bash          

      - name: Package, Unit test, Code Coverage
        #if: steps.cache_m2_repo.outputs.cache-hit == ''
        working-directory: spring-petclinic-${{ env.CUSTOMERS_SERVICE }}
        run: |
           mvn -B package -DskipTests -Denv=cloud

      # Log out from Azure
      - name: Log out from Azure
        id: azure_logout
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az logout

  deploy:
    name: Deploy Customers
    runs-on: ubuntu-latest        
    needs: build
    timeout-minutes: 15
    steps:

      - name: Checkout GitHub Actions 
        uses: actions/checkout@v2
        with:
          ref: gene      

      - name: Check Build Cache, restore builds cache
        uses: actions/cache@v2
        id: cache_built_packages
        with:
          path: ${{ env.CACHED_BUILD_PATHS }}
          key: ${{ env.BUILD_CACHE_KEY }}

      # for debug
      - name: Run Script File
        #if: steps.cache_built_packages.outputs.cache-hit == ''  
        working-directory: spring-petclinic-${{ env.CUSTOMERS_SERVICE }}
        run: |
           echo "-----"
           pwd
           ls -al
           echo ${{ env.CACHED_BUILD_PATHS }}
           ls -al ${{ env.CACHED_BUILD_PATHS }}
           echo ${{ env.BUILD_CACHE_KEY }}
           echo ${{ steps.cache_built_packages.outputs.cache-hit }}
           echo "-----"
        shell: bash

      # Log in to Azure
      - name: Login via Azure CLI
        uses: azure/login@v1.1
        with:
          creds: ${{ env.AZURE_CRED }} 

      - name: Deploy to Production with artifact, customers-service 
        uses: azure/spring-cloud-deploy@v1
        with:
          azure-subscription: ${{ env.AZURE_SUBSCRIPTION_ID }}
          action: Deploy
          service-name: ${{ env.SPRING_CLOUD_SERVICE }}
          app-name: ${{ env.CUSTOMERS_SERVICE }}
          use-staging-deployment: false
          #package: ${{ env.ASC_PACKAGE_PATH }}/${{ env.CUSTOMERS_SERVICE_JAR }}
          package: ${{ env.CACHED_BUILD_PATHS }}/spring-petclinic-customers-service-2.5.1.jar
          jvm-options: -Xms2048m -Xmx2048m -Dspring.profiles.active=mysql
          environment-variables: "-AZURE_CLIENT_ID ${{ env.AZURE_CLIENT_ID }} -AZURE_CLIENT_SECRET ${{ env.AZURE_CLIENT_SECRET }} -AZURE_TENANT_ID ${{ env.AZURE_TENANT_ID }} -KEYVAULT_URI ${{ env.KEYVAULT_URI }}"

      # Log out from Azure
      - name: Log out from Azure
        id: azure_logout
        uses: azure/cli@v1
        with:
          azcliversion: latest
          inlineScript: |
            az logout          